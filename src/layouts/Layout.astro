---
export interface Props {
title: string;
showHeaderOverlay?: boolean;
immersive?: boolean;
enableHeaderTransition?: boolean;
}
const { title } = Astro.props;
import '../styles/global.css';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
---

<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>{title}</title>
  <!-- Open Graph / Facebook -->
  <meta property="og:title" content="Aziz El Ouaqid — Technologist. Builder. Advisor." />
  <meta property="og:description"
    content="Blending deep tech and human insight to support innovation, mentorship, and meaningful impact.." />
  <meta property="og:image" content="/og-image.png" />
  <meta property="og:url" content="https://azizelo.github.io/personal-site/" />
  <meta property="og:type" content="website" />

  <!-- Twitter -->
  <meta name="twitter:card" content="summary_large_image" />
  <meta name="twitter:title" content="Aziz El Ouaqid — Technologist. Builder. Advisor." />
  <meta name="twitter:description"
    content="Blending deep tech and human insight to support innovation, mentorship, and meaningful impact." />
  <meta name="twitter:image" content="/og-image.png" />

  <link rel="icon" href="/favicon.ico" type="image/x-icon" />

  <link
    href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600&family=Space+Grotesk:wght@500;700&display=swap"
    rel="stylesheet" />
</head>

<body class="scroll-smooth snap-y snap-proximity bg-[#FAF7F2] font-sans text-[#2D3142] overflow-x-hidden">
  <Header showOverlay={Astro.props.showHeaderOverlay} immersive={Astro.props.immersive}
    enableTransition={Astro.props.enableHeaderTransition} />
  <main>
    <slot />
  </main>
  <Footer />
  <script is:inline>
    document.addEventListener('DOMContentLoaded', () => {
      const sections = document.querySelectorAll('section[id]');
      const navLinks = document.querySelectorAll('nav a[href^="#"]');

      const observer = new IntersectionObserver(
        entries => {
          entries.forEach(entry => {
            if (entry.isIntersecting) {
              navLinks.forEach(link => {
                link.classList.toggle('text-yellow-600', link.getAttribute('href') === `#${entry.target.id}`);
              });
            }
          });
        },
        { threshold: 0.5 }
      );

      sections.forEach(section => observer.observe(section));
    });
  </script>
  <link href="https://assets.calendly.com/assets/external/widget.css" rel="stylesheet" />
  <script src="https://assets.calendly.com/assets/external/widget.js" type="text/javascript" async></script>

</body>

</html>